>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> lazy_matrix_mul([[1]], [[1]])
[[1]]
>>> lazy_matrix_mul([[1]], [[1.0]])
[[1.0]]
>>> lazy_matrix_mul([[1]], [[2]])
[[2]]
>>> lazy_matrix_mul([[2]], [[2.5]])
[[5.0]]
>>> lazy_matrix_mul([[1]], [[0]])
[[0]]
>>> lazy_matrix_mul([[0.0]], [[0]])
[[0.0]]
>>> lazy_matrix_mul([[0.0]], [[8]])
[[0.0]]
>>> lazy_matrix_mul([[-2]], [[2.5]])
[[-5.0]]
>>> lazy_matrix_mul([[-1]], [[0]])
[[0]]
>>> lazy_matrix_mul([[20]], [[-2]])
[[-40]]
>>> lazy_matrix_mul([[20]], [[-2.1]])
[[-42.0]]

>>> lazy_matrix_mul([[1, 2, 3]], [[4], [5], [6]])
[[32]]
>>> lazy_matrix_mul([[1, 2, 3]], [[-4], [5.3], [6]])
[[24.6]]
>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[4], [5], [6]])
[[32], [77]]
>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6.1]], [[-9.3], [-55], [6.0]])
[[-101.3], [-275.6]]
>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[4, 7], [5, 8], [6, 9]])
[[32, 50], [77, 122]]


## error checks

>>> lazy_matrix_mul(None, None)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul(1, 2)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul(5, [[1]])
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul(3.0, 9.8)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul((1,), None)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul(([1],), None)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul(((1,),), None)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul({1}, None)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul(list, None)
Traceback (most recent call last):
TypeError: m_a must be a list
>>> lazy_matrix_mul((1), [[1]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> lazy_matrix_mul([1], 1)
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([1], 4.0)
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([1], None)
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([[1]], None)
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([1], (1))
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([1], (1,))
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([1], ([1],))
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([[1]], ((1,),))
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([[1]], {1})
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([[1]], list)
Traceback (most recent call last):
TypeError: m_b must be a list
>>> lazy_matrix_mul([[1]], (1,))
Traceback (most recent call last):
TypeError: m_b must be a list

# list of lists check
>>> lazy_matrix_mul([1], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([(1, 2)], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([(1,)], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([{1}], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([[1], (2)], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([[1], {2}], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([([1],), [2]], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([[1, 2], [3], [4, 5, 6], (7,), [8]], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists
>>> lazy_matrix_mul([[1, 2], list, [4, 5, 6], (7,), [8]], [1])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> lazy_matrix_mul([[1]], [1])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul([[1]], [(1, 2)])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul([[1]], [(1,)])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul([[1]], [{1}])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul([[1]], [[1], (2,)])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul([[1]], [[1], {2}])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul([[1]], [([1],), [2]])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul([[1]], [[1, 2], [3], [4, 5, 6], (7,), [8]])
Traceback (most recent call last):
TypeError: m_b must be a list of lists
>>> lazy_matrix_mul([[1]], [list])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

# empty matrix/lists checks
>>> lazy_matrix_mul([], [[]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([], [[1], [2, 3]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([], [['str']])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([], [])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[]], [[]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[]], [])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[]], [[1], [2, 3]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[]], [['str']])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[], []], [[]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[], []], [])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[], []], [[1], [2, 3]])
Traceback (most recent call last):
ValueError: m_a can't be empty
>>> lazy_matrix_mul([[], []], [['str']])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([[1], [2, 3]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([['str']], [])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([[1]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([['str']], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([[1], ['2', 3]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([[1]], [[], []])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([['str'], [2, 3]], [[], []])
Traceback (most recent call last):
ValueError: m_b can't be empty
>>> lazy_matrix_mul([[1], ['2']], [[], []])
Traceback (most recent call last):
ValueError: m_b can't be empty

# cell type checks
>>> lazy_matrix_mul([['str']], [[1]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> lazy_matrix_mul([[1, '2']], [[1]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> lazy_matrix_mul([[1, 2], [3, 4], [5, '6']], [[1]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> lazy_matrix_mul([[1, 2], [3, 4, 5, '6']], [[1]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> lazy_matrix_mul([[1, '2'], [3]], [[1], [2]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> lazy_matrix_mul([[1, 1+0j]], [[1], [2, 3]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats
>>> lazy_matrix_mul([[2], [int]], [[1]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([[1]], [['str']])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> lazy_matrix_mul([[1]], [[1, '2']])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> lazy_matrix_mul([[1]], [[1, 2], [3, 4], [5, '6']])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> lazy_matrix_mul([[1], [3, 4]], [[1, 2], [3, 4, 5, '6']])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> lazy_matrix_mul([[1]], [[1, '2'], [3]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> lazy_matrix_mul([[1]], [[1, 1+0j]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats
>>> lazy_matrix_mul([[1], [2, 3]], [[2], [int]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

# rectangular matrix checks
>>> lazy_matrix_mul([[1], [2, 3]], [[1, 2], [3]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size
>>> lazy_matrix_mul([[1, 2], [2]], [[1, 2], [3]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size
>>> lazy_matrix_mul([[1, 2], [2, 3, 4]], [[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2], [2, 3]], [[1, 2], [3]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
>>> lazy_matrix_mul([[1, 2], [2, 3]], [[1, 2], [3, 4, 5]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
>>> lazy_matrix_mul([[1, 2], [2, 3]], [[1, 2], [3, 4], [5, 6, 7]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

## correct dimensions check

>>> lazy_matrix_mul([[1, 2], [2, 3]], [[1, 2.1], [3, 4], [5, 6]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
>>> lazy_matrix_mul([[1, 2, 3.3, 4]], [[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
>>> lazy_matrix_mul([[1]], [[1, 2.3], [3, 4], [5.0, 6]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
